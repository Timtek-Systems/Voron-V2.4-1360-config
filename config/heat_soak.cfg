# Macros for automating heat soak.
# Will measure the Z-offset using the Auto-Z-Calibration plugin every few minutes.
# Keeps track of how much the offset is changing between measurements.
# When the delta falls below a threshold, stops measuring and starts the print queue

[gcode_macro HEATSOAK]
variable_tolerance: 0.0175
variable_previous_offset: 0
variable_delta: 0
variable_repeat_seconds: 180
gcode:
  {% set Threshold = params.TOLERANCE | default(0.025) | float %}  
  {% set Repeat = params.INTERVAL | default(360) | int %}
  SET_GCODE_VARIABLE MACRO=HEATSOAK VARIABLE=tolerance VALUE={Threshold}
  SET_GCODE_VARIABLE MACRO=HEATSOAK VARIABLE=repeat_seconds VALUE={Repeat}
  M117 Heatsoak starting
  PRINTER_STATE_PREHEAT
  UPDATE_DELAYED_GCODE ID=_HEATSOAK_CHECK_Z_OFFSET DURATION=5

[gcode_macro HEATSOAK_STOP]
gcode:
  UPDATE_DELAYED_GCODE ID=_HEATSOAK_CHECK_Z_OFFSET DURATION=0

[delayed_gcode _HEATSOAK_CHECK_Z_OFFSET]
initial_duration: 0
gcode:
  {action_respond_info("Measuring Z offset")}
  CALIBRATE_Z FORCE=1
  _HEATSOAK_COMPUTE_DELTA
  _HEATSOAK_RESCHEDULE

[gcode_macro _HEATSOAK_COMPUTE_DELTA]
gcode:
  {% set previous = printer["gcode_macro HEATSOAK"].previous_offset %}
  {% set current = printer.gcode_move.homing_origin.z %}
  {% set delta = current - previous %}
  {% set tolerance = printer["gcode_macro HEATSOAK"].tolerance %}
  SET_GCODE_VARIABLE MACRO=HEATSOAK VARIABLE=previous_offset VALUE={current}
  SET_GCODE_VARIABLE MACRO=HEATSOAK VARIABLE=delta VALUE={delta}
  {action_respond_info("Previous:  %.3f" % (previous))}
  {action_respond_info("Current:   %.3f" % (current))}
  {action_respond_info("Delta:     %.3f" % (delta))}
  {action_respond_info("Tolerance: %.3f" % (tolerance))}

[gcode_macro _HEATSOAK_RESCHEDULE]
gcode:
  {% set previous = printer["gcode_macro HEATSOAK"].previous_offset %}
  {% set current = printer.gcode_move.homing_origin.z %}
  {% set delta = printer["gcode_macro HEATSOAK"].delta %}
  {% set tolerance = printer["gcode_macro HEATSOAK"].tolerance %}
  {% set repeat = printer["gcode_macro HEATSOAK"].repeat_seconds %}
  {% if delta|abs <= tolerance %}
    PRINTER_STATE_SUCCESS
    M117 Heatsoak Complete
    BEEP DURATION=2000
    HEATSOAK_STOP
    { action_call_remote_method("start_job_queue") }
  {% else %}
    M117 D{delta} T{tolerance}
    UPDATE_DELAYED_GCODE ID=_HEATSOAK_CHECK_Z_OFFSET DURATION={repeat}
  {% endif %}

